name: Lint & Test & Build & Release

on:
  push:
    tags:
      - 'v*'
    branches:
      - "!*"

jobs:
  build:
    runs-on: ubuntu-latest
    name: Lint & Test & Build & Release
    steps:
      - name: Set up go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16'

      - name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0

      - name: Install tools
        run: |
          export GOBIN=$(go env GOPATH)/bin
          go env
          make install-tools
          echo "${GOBIN}" >> $GITHUB_PATH

      - name: Vet
        run: |
          make vet

      - name: Lint
        uses: golangci/golangci-lint-action@v2.4.0
        with:
          # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.
          version: latest
          # Optional: working directory, useful for monorepos
          # working-directory: somedir

          # Optional: golangci-lint command line arguments.
          args: --issues-exit-code=0

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          only-new-issues: true

          # Optional: if set to true then the action will use pre-installed Go.
          skip-go-installation: true

          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
          skip-pkg-cache: true

          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
          skip-build-cache: true

      - name: Test
        run: |
          make test

      - name: Docker Login
        if: success() && startsWith(github.ref, 'refs/tags/v')
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login --username "${DOCKER_USERNAME}" --password-stdin
          echo "${GITHUB_TOKEN}" | docker login ghcr.io --username $GITHUB_ACTOR --password-stdin

      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          install-only: true

      - name: Run GoReleaser
        if: success()
        run: |
          make release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Clear
        if: always() && startsWith(github.ref, 'refs/tags/v')
        run: |
          rm -f ${HOME}/.docker/config.json
