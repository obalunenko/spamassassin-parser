release:
  github:
    owner: obalunenko
    name: spamassassin-parser

env:
  - GO111MODULE=on
  - CGO_ENABLED=0
  - GOPROXY=https://gocenter.io
before:
  hooks:
    - go mod tidy -v

builds:
  - id: service
    binary: spamassassin-parser
    goos:
      - darwin
      - windows
      - linux
    goarch:
      - amd64
      - arm
    main: ./cmd/spamassassin-parser
    ldflags:
      - "{{ .Env.GO_BUILD_LDFLAGS }}"

dockers:
  # You can have multiple Docker images.
  -
    # GOOS of the built binary that should be used.
    goos: linux

    # GOARCH of the built binary that should be used.
    goarch: amd64

    # GOARM of the built binary that should be used.
    goarm: ''

    # Build IDs to gather the binaries from.
    ids: ['service', 'spamassassin-parser']

    image_templates:
      - "olegbalunenko/spamassassin-parser:latest"
      - "olegbalunenko/spamassassin-parser:{{ .Tag }}"
      - "olegbalunenko/spamassassin-parser:v{{ .Major }}.{{ .Minor }}"

    # Skips the docker push. Could be useful if you also do draft releases.
    # If set to auto, the release will not be pushed to the docker repository
    # in case there is an indicator for prerelease in the tag e.g. v1.0.0-rc1
    # Defaults to false.
    skip_push: false

    # Path to the Dockerfile (from the project root).
    dockerfile: build/docker/spamassassin-parser/releaser.Dockerfile
    extra_files:
      - build/docker/spamassassin-parser/entrypoint.sh

    # If your Dockerfile copies files other than the binary itself,
    # you should list them here as well.
    # Note that goreleaser will create the same structure inside the temporary
    # folder, so if you add `foo/bar.json` here, on your Dockerfile you can
    # `COPY foo/bar.json /whatever.json`.
    # Also note that the paths here are relative to the folder in which
    # goreleaser is being run.
    # This field does not support wildcards, you can add an entire folder here
    # and use wildcards when you `COPY`/`ADD` in your Dockerfile.

archives:
  - id: service
    builds:
      - service
    format: tar.gz
    wrap_in_directory: true
    format_overrides:
      - goos: windows
        format: zip
    replacements:
      amd64: 64-bit
      386: 32-bit
      darwin: macOS
      linux: Tux
    name_template: "{{ .Binary }}-{{ .Version }}-{{ .Os }}-{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"
    files:
      - LICENSE
      - README.md
      - .env.example
      - src: deployments/docker-compose/release/docker-compose.yml
        dst: .
        strip_parent: true


checksum:
  name_template: "{{ .ProjectName }}-{{ .Version }}-checksums.txt"

snapshot:
  name_template: SNAPSHOT-{{ .Commit }}

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
      - "^dev:"
      - "README"
      - "^readme"
      - "^scripts"
      - "scripts:"
      - Merge pull request
      - Merge branch
      - Rebase on master
      - "^Makefile"
      - "goreleaser"
