release:
  github:
    owner: obalunenko
    name: spamassassin-parser
  footer: |
    **Full Changelog**: https://github.com/obalunenko/spamassassin-parser/compare/{{ .PreviousTag }}...{{ .Tag }}

env:
  - GO111MODULE=on
  - CGO_ENABLED=0
  - GOPROXY=https://proxy.golang.org,direct
  - DOCKER_REPO=ghcr.io/obalunenko/
before:
  hooks:
    - go mod verify

builds:
  - id: service
    binary: spamassassin-parser
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm
      - arm64
    goarm:
      - "7"
    main: ./cmd/spamassassin-parser
    ldflags:
      - "{{ .Env.GO_BUILD_LDFLAGS }}"

universal_binaries:
  - # ID of the source build
    #
    # Defaults to the project name.
    id: service

    # Universal binary name template.
    #
    # You will want to change this if you have multiple builds!
    #
    # Defaults to '{{ .ProjectName }}'
    name_template: "spamassassin-parser"

    # Whether to remove the previous single-arch binaries from the artifact list.
    # If left as false, your end release might have both several macOS archives: amd64, arm64 and all.
    #
    # Defaults to false.
    replace: true

dockers:
  - image_templates:
      - "olegbalunenko/spamassassin-parser:{{ .Tag }}-amd64"
      - "ghcr.io/olegbalunenko/spamassassin-parser:{{ .Tag }}-amd64"
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.name={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--build-arg=DOCKER_REPO={{.Env.DOCKER_REPO}}"
      - "--platform=linux/amd64"
    dockerfile: build/docker/spamassassin-parser/releaser.Dockerfile
    extra_files:
      - build/docker/spamassassin-parser/entrypoint.sh
    ids: ["service", "spamassassin-parser"]
  - image_templates:
      - "olegbalunenko/spamassassin-parser:{{ .Tag }}-arm64"
      - "ghcr.io/olegbalunenko/spamassassin-parser:{{ .Tag }}-arm64"
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.name={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--build-arg=DOCKER_REPO={{.Env.DOCKER_REPO}}"
      - "--platform=linux/arm64"
    goarch: arm64
    dockerfile: build/docker/spamassassin-parser/releaser.Dockerfile
    extra_files:
      - build/docker/spamassassin-parser/entrypoint.sh
    ids: ["service", "spamassassin-parser"]

docker_manifests:
  - name_template: "olegbalunenko/spamassassin-parser:{{ .Tag }}"
    image_templates:
      - "olegbalunenko/spamassassin-parser:{{ .Tag }}-amd64"
      - "olegbalunenko/spamassassin-parser:{{ .Tag }}-arm64"
  - name_template: "ghcr.io/olegbalunenko/spamassassin-parser:{{ .Tag }}"
    image_templates:
      - "ghcr.io/olegbalunenko/spamassassin-parser:{{ .Tag }}-amd64"
      - "ghcr.io/olegbalunenko/spamassassin-parser:{{ .Tag }}-arm64"
  - name_template: "goreleaser/goreleaser:latest"
    image_templates:
      - "olegbalunenko/spamassassin-parser:{{ .Tag }}-amd64"
      - "olegbalunenko/spamassassin-parser:{{ .Tag }}-arm64"
  - name_template: "ghcr.io/olegbalunenko/spamassassin-parser:latest"
    image_templates:
      - "olegbalunenko/spamassassin-parser:{{ .Tag }}-amd64"
      - "olegbalunenko/spamassassin-parser:{{ .Tag }}-arm64"

archives:
  - id: service
    builds:
      - service
    format: tar.gz
    wrap_in_directory: true
    format_overrides:
      - goos: windows
        format: zip
    replacements:
      amd64: 64-bit
      386: 32-bit
      darwin: macOS
      linux: Tux
    name_template: "{{ .Binary }}-{{ .Version }}-{{ .Os }}-{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"
    files:
      - LICENSE
      - README.md
      - .env.example
      - src: deployments/docker-compose/release/docker-compose.yml
        dst: .
        strip_parent: true

checksum:
  name_template: "{{ .ProjectName }}-{{ .Version }}-checksums.txt"

snapshot:
  name_template: SNAPSHOT-{{ .Commit }}

changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - "^docs:"
      - "^test:"
      - "^dev:"
      - "README"
      - "^readme"
      - "^scripts"
      - "scripts:"
      - Merge pull request
      - Merge branch
      - Rebase on master
      - "^Makefile"
      - "goreleaser"
  groups:
    - title: "New Features"
      regexp: "^.*feat[(\\w)]*:+.*$"
      order: 0
    - title: "Bug fixes"
      regexp: "^.*fix[(\\w)]*:+.*$"
      order: 10
    - title: Other work
      order: 999

milestones:
  - close: true
